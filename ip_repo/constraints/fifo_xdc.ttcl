<: ;#file genreate condition :>
<: set ASYNC [getIntValue "ASYNC"] :>
<: if {$ASYNC == 0} { :>
<:		ttcl_return :>
<: } :>
<: ;#fix header :>
<: setFileProcessingOrder late :>
<: set ComponentName [getComponentNameString] :>
<: setOutputDirectory "./" :>
<: setFileName [ttcl_string_concat [getComponentNameString] "_xdc"] :>
<: setFileExtension ".xdc" :>
<: setFileUsedIn {synthesis implementation} :>
<: ;#variables :>
<: set AXIS [getIntValue "AXIS"] :>
<: if {$ASYNC != 0} { :>
<: if {$AXIS != 0} { :>
#set src_clk  [get_clocks -quiet -of [get_ports s_axis_clk]]
#set dest_clk [get_clocks -quiet -of [get_ports m_axis_clk]]
<: } else { :>
#set src_clk  [get_clocks -quiet -of [get_ports wr_clk]]
#set dest_clk [get_clocks -quiet -of [get_ports rd_clk]]
<: } :>
#set src_clk_period  [get_property -quiet -min PERIOD $src_clk]
#set dest_clk_period [get_property -quiet -min PERIOD $dest_clk]
set_false_path -through [get_ports rst]
set_false_path -to [get_cells -hier d_meta_reg[0][*]] -quiet
<: if {$AXIS == 0} { :>
set_false_path -from [filter [all_fanout -from [get_ports wr_clk] -flat -endpoints_only] {IS_LEAF}] -through [get_pins -of_obj [get_cells -hier * -filter {NAME=~*u_simple_dp_ram/mem_int_reg*}] -filter {DIRECTION==OUT}]
<: } else { :>
set_false_path -from [filter [all_fanout -from [get_ports s_axis_clk] -flat -endpoints_only] {IS_LEAF}] -through [get_pins -of_obj [get_cells -hier * -filter {NAME=~*u_simple_dp_ram/mem_int_reg*}] -filter {DIRECTION==OUT}]
<: } :>
<: } :>